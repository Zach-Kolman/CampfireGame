<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fireMed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-801</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties
image_speed = 0.25;
kindle = 0;
fireLevel = noone;
ending = noone;

instance_create(x,y,obj_eventController);
instance_create(x,y+10,obj_glow);

//Camera Properties
//zoomLevel_Low = 

//Cheats Properties
cheatsActive = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>120</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fireLevel &gt; 0
{
kindle -=1;
}

if fireLevel == 3
{
instance_create(x,pr,obj_particles);
instance_create(x,pr,obj_particles);
instance_create(x,pr,obj_particles);
instance_create(x,pr,obj_particles);
instance_create(x,pr,obj_particles);
}

if fireLevel == 4
{
instance_create(x,pr,obj_particles2);
instance_create(x,pr,obj_particles2);
instance_create(x,pr,obj_particles2);
instance_create(x,pr,obj_particles2);
instance_create(x,pr,obj_particles2);
}

if fireLevel == 5
{
instance_create(x,pr,obj_particles3);
instance_create(x,pr,obj_particles3);
instance_create(x,pr,obj_particles3);
instance_create(x,pr,obj_particles3);
instance_create(x,pr,obj_particles3);
}

if fireLevel == 6
{
instance_create(x,pr,obj_particles4);
instance_create(x,pr,obj_particles4);
instance_create(x,pr,obj_particles4);
instance_create(x,pr,obj_particles4);
instance_create(x,pr,obj_particles4);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>120</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Particles
pr = random_range(y+64,y+48);

if (ending != 2)
{
    if keyboard_check_pressed(vk_space) 
    {
        if fireLevel &lt;= 3
        {
        instance_create(x+32,pr,obj_particles);
        instance_create(x+64,pr,obj_particles);
        instance_create(x+48,pr,obj_particles);
        instance_create(x+16,pr,obj_particles);
        
        instance_create(x-32,pr,obj_particles);
        instance_create(x-64,pr,obj_particles);
        instance_create(x-48,pr,obj_particles);
        instance_create(x-16,pr,obj_particles);
        
        instance_create(x,pr,obj_particles);
        }
        
        if fireLevel == 4
        {
        instance_create(x+32,pr,obj_particles2);
        instance_create(x+64,pr,obj_particles2);
        instance_create(x+48,pr,obj_particles2);
        instance_create(x+16,pr,obj_particles2);
        
        instance_create(x-32,pr,obj_particles2);
        instance_create(x-64,pr,obj_particles2);
        instance_create(x-48,pr,obj_particles2);
        instance_create(x-16,pr,obj_particles2);
        
        instance_create(x,pr,obj_particles2);
        }
        
        if fireLevel == 5
        {
        instance_create(x+32,pr,obj_particles3);
        instance_create(x+64,pr,obj_particles3);
        instance_create(x+48,pr,obj_particles3);
        instance_create(x+16,pr,obj_particles3);
        
        instance_create(x-32,pr,obj_particles3);
        instance_create(x-64,pr,obj_particles3);
        instance_create(x-48,pr,obj_particles3);
        instance_create(x-16,pr,obj_particles3);
        
        instance_create(x,pr,obj_particles3);
        }
        
        if fireLevel &gt;= 6
        {
        instance_create(x+32,pr,obj_particles4);
        instance_create(x+64,pr,obj_particles4);
        instance_create(x+48,pr,obj_particles4);
        instance_create(x+16,pr,obj_particles4);
        
        instance_create(x-32,pr,obj_particles4);
        instance_create(x-64,pr,obj_particles4);
        instance_create(x-48,pr,obj_particles4);
        instance_create(x-16,pr,obj_particles4);
        
        instance_create(x,pr,obj_particles4);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire Shrinking
if (ending != 2)
{
    if cheatsActive = true
    {
        if (keyboard_check(vk_space)) &amp;&amp; (kindle &lt; 170)
        {
            kindle+=0.25;
        }
        
        if (keyboard_check(vk_shift)) &amp;&amp; (kindle &gt; 0)
        {
            kindle-=0.25;
        }
        
        if (keyboard_check(ord("1")))
        {
            kindle = 10;
        }
        
        if (keyboard_check(ord("2")))
        {
            kindle = 30;
        }
        
        if (keyboard_check(ord("3")))
        {
            kindle = 50;
        }
        
        if (keyboard_check(ord("4")))
        {
            kindle = 70;
        }
        
        if (keyboard_check(ord("5")))
        {
            kindle = 90;
        }
        
        if (keyboard_check(ord("6")))
        {
            kindle = 110;
        }
        
        if (keyboard_check(ord("7")))
        {
            kindle = 130;
        }
    }
    else
    {
        if (keyboard_check_pressed(vk_space)) &amp;&amp; (kindle &lt; 170)
        {
            kindle+=1;
        }
        
        if (keyboard_check_pressed(vk_shift)) &amp;&amp; (kindle &gt; 0)
        {
            kindle-=1;
        }
    }
}

//show_debug_message(kindle);



































/*///////////////////////////// OLD CODE OLD CODE
minScale = 0;
maxScale = 3;

if (image_xscale &gt; minScale)
{
   image_xscale -= 0.0005;
}

if (image_yscale &gt; minScale)
{
    image_yscale -= 0.0005;
}

if (keyboard_check_pressed(vk_space) &amp;&amp; image_xscale &lt; maxScale &amp;&amp; obj_counter.maxKindle &gt; 0)
{
    image_xscale += 0.03;
    image_yscale += 0.03;
}

if (keyboard_check_pressed(vk_shift) &amp;&amp; image_xscale &gt; minScale)
{
    image_xscale -= 0.03;
    image_yscale -= 0.03;
}

if (keyboard_check_pressed(vk_space) &amp;&amp; keyboard_check_pressed(vk_shift))
{
    //Do Nothing
}

if image_xscale &lt;= minScale
{
    show_debug_message("gameover");
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire States

if kindle &gt;= 170
{
    fireLevel = 7;
    ending = 2;
}

if ((kindle &gt; 120) &amp;&amp; (kindle &lt; 170))
{
    fireLevel = 7;
}

if ((kindle &gt; 100) &amp;&amp; (kindle &lt; 120))
{
    fireLevel = 6;
}

if ((kindle &gt; 80) &amp;&amp; (kindle &lt; 100))
{
    fireLevel = 5;
}

if ((kindle &gt; 60) &amp;&amp; (kindle &lt; 80))
{
    fireLevel = 4;
}

if ((kindle &gt; 40) &amp;&amp; (kindle &lt; 60))
{
    fireLevel = 3;
}

if ((kindle &gt; 20) &amp;&amp; (kindle &lt; 40))
{
    fireLevel = 2;
}

if ((kindle &gt; 0) &amp;&amp; (kindle &lt; 20))
{
    fireLevel = 1;
}

if kindle &lt;= 0
{
    fireLevel = 0;
    ending = 1;
}

if (kindle &gt; 0) &amp;&amp; (kindle &lt; 170)
{
    ending = 0;
}

//Visuals Controller
if fireLevel = 0
{
    sprite_index = spr_fireDead;
    //obj_lightcontrols.fadeLevel = 1;
}

if fireLevel = 1
{
    sprite_index = spr_fireLow;
    //obj_lightcontrols.fadeLevel = 0.9
}

if fireLevel = 2
{
    sprite_index = spr_fireMed;
    //obj_lightcontrols.fadeLevel = 0.8;
}

if fireLevel = 3
{
    sprite_index = spr_fireMedHigh;
    //obj_lightcontrols.fadeLevel = 0.7;
}

if fireLevel = 4
{
    sprite_index = spr_fireHigh;
    //obj_lightcontrols.fadeLevel = 0.6;
}

if fireLevel = 5
{
    sprite_index = spr_fireHigher;
    //obj_lightcontrols.fadeLevel = 0.5;
}

if fireLevel = 6
{
    sprite_index = spr_fireHigher2;
    //obj_lightcontrols.fadeLevel = 0.4;
}

if fireLevel = 7
{
    sprite_index = spr_fireMax;
   // obj_lightcontrols.fadeLevel = 0.3;
}

//Fire Sound Effects Controller
if fireLevel &lt;=0 &amp;&amp; audio_is_playing(sfx_fireSM)
{
    audio_stop_sound(sfx_fireSM);
}

if fireLevel &lt;=2 &amp;&amp; fireLevel &gt; 0 &amp;&amp; !audio_is_playing(sfx_fireSM)
{
    if audio_is_playing(sfx_fireMD)
    {
        audio_stop_sound(sfx_fireMD);
    }
    audio_play_sound(sfx_fireSM,0,1);
}
if fireLevel &gt;= 3 &amp;&amp; fireLevel &lt;= 5 &amp;&amp; !audio_is_playing(sfx_fireMD)
{
    if audio_is_playing(sfx_fireSM)
    {
        audio_stop_sound(sfx_fireSM);
    }
    if audio_is_playing(sfx_fireLG)
    {
        audio_stop_sound(sfx_fireLG);
    }
    audio_play_sound(sfx_fireMD,0,1);
}
if fireLevel == 6 &amp;&amp; !audio_is_playing(sfx_fireLG)
{
    if audio_is_playing(sfx_fireMD)
    {
        audio_stop_sound(sfx_fireMD);
    }
    if audio_is_playing(sfx_fireMAX)
    {
        audio_stop_sound(sfx_fireMAX);
    }
    audio_play_sound(sfx_fireLG,0,1);
}

if fireLevel == 7 &amp;&amp; !audio_is_playing(sfx_fireMAX)
{
    if audio_is_playing(sfx_fireLG)
    {
        audio_stop_sound(sfx_fireLG);
    }
    audio_play_sound(sfx_fireMAX,0,1);
}













/*///////////////////////////// OLD CODE OLD CODE
fireSmall = 0.5;
fireMed = 2;
fireLarge = 2.5;

if (image_xscale &lt;= minScale &amp;&amp; audio_is_playing(sfx_fireSM))
{
    audio_stop_sound(sfx_fireSM);   
}

if (image_xscale &lt; fireSmall &amp;&amp; image_xscale &gt; minScale &amp;&amp; !audio_is_playing(sfx_fireSM))
{
    if(audio_is_playing(sfx_fireMD))
    {
        audio_stop_sound(sfx_fireMD);
    }
    
    audio_sound_gain(music_story1,0,5000);

    audio_play_sound(sfx_fireSM,0,1);
    show_debug_message("small");
} 

if (image_xscale &lt; fireMed &amp;&amp; image_xscale &gt; fireSmall &amp;&amp; !audio_is_playing(sfx_fireMD))
{
    if(audio_is_playing(sfx_fireSM))
    {
        audio_stop_sound(sfx_fireSM);
    }
    
    if(audio_is_playing(sfx_fireLG))
    {
        audio_stop_sound(sfx_fireLG);
    }
    
    audio_sound_gain(music_story1,1,5000);
    
    audio_play_sound(sfx_fireMD,0,1);
    show_debug_message("med");
} 

if (image_xscale &lt; maxScale &amp;&amp; image_xscale &gt; fireMed &amp;&amp; !audio_is_playing(sfx_fireLG))
{
    if(audio_is_playing(sfx_fireMD))
    {
        audio_stop_sound(sfx_fireMD);
    }
    
    audio_sound_gain(music_story1,0,5000);
    
    audio_play_sound(sfx_fireLG,0,1);
    show_debug_message("large");
} 
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera
/*
if fireLevel &lt;=1
{
    view_xview = 320;
    view_yview = 280; //280
    
    view_wview = 640; 
    view_hview = 460; //460
}

if (fireLevel &gt;=2 &amp;&amp; fireLevel &lt;= 5)
{
    view_xview = 80;
    view_yview = 120;
    
    view_wview = 1120;
    view_hview = 630;    
}

if fireLevel &gt;=6
{
    view_xview = 0;
    view_yview = 0;
    
    view_wview = 1280;
    view_hview = 720;
}

//show_debug_message(view_wview);
//show_debug_message(view_xview);

//view_wview = image_xscale*426.66;
//view_hview = image_yscale*240;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cheats
if (keyboard_check_pressed(ord('P')))
{
    if cheatsActive == true
    {
        cheatsActive = false;
    }
    else
    {
        cheatsActive = true;
    }
}

if (keyboard_check_pressed(vk_escape))
{
    audio_stop_all();
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SFX

if (ending != 2)
{
    if keyboard_check_pressed(vk_space)
    {
    
        if (audio_is_playing(sfx_addFire)) &amp;&amp; (audio_is_playing(sfx_addFire2))
        {
            audio_play_sound(sfx_addFire3,0,0);
            audio_stop_sound(sfx_addFire);
        }
        else
        {
            if (audio_is_playing(sfx_addFire))
            {
            audio_play_sound(sfx_addFire2,0,0);
            }
            else
            {
            audio_play_sound(sfx_addFire,0,0);
            audio_stop_sound(sfx_addFire2);
            }
        }

    }       
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
