<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>track1 = 0;
track2 = 0;
track3 = 0;
track4 = 0;
audio_sound_gain(music_part1,track1,0);
audio_sound_gain(music_part2,track2,0);
audio_sound_gain(music_part3,track3,0);
audio_sound_gain(music_part4,track4,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Music System

if (obj_fire.fireLevel &lt;= 1)
{
    track1 = 0;
    track2 = 0;
    track3 = 0;
    track4 = 0;
    audio_sound_gain(music_part1,track1,180);
    audio_sound_gain(music_part2,track2,180);
    audio_sound_gain(music_part3,track3,180);
    audio_sound_gain(music_part4,track4,180);
}

if (obj_fire.fireLevel &gt; 1) &amp;&amp; (obj_fire.fireLevel &lt; 3)
{
    track1 = 0.25;
    track2 = 0;
    track3 = 0;
    track4 = 0;
    audio_sound_gain(music_part1,track1,180);
    audio_sound_gain(music_part2,track2,180);
    audio_sound_gain(music_part3,track3,180);
    audio_sound_gain(music_part4,track4,180);
}

if (obj_fire.fireLevel &gt;= 3) &amp;&amp; (obj_fire.fireLevel &lt; 5)
{
    track1 = 0.25;
    track2 = 0.25;
    track3 = 0;
    track4 = 0;
    audio_sound_gain(music_part1,track1,180);
    audio_sound_gain(music_part2,track2,180);
    audio_sound_gain(music_part3,track3,180);
    audio_sound_gain(music_part4,track4,180);
}

if (obj_fire.fireLevel &gt;= 5) &amp;&amp; (obj_fire.fireLevel &lt; 6)
{
    track1 = 0.25;
    track2 = 0.25;
    track3 = 0.25;
    track4 = 0;
    audio_sound_gain(music_part1,track1,180);
    audio_sound_gain(music_part2,track2,180);
    audio_sound_gain(music_part3,track3,180);
    audio_sound_gain(music_part4,track4,180);
}

if (obj_fire.fireLevel &gt;= 6) &amp;&amp; (obj_fire.fireLevel &lt; 7)
{
    track1 = 0.25;
    track2 = 0.25;
    track3 = 0.25;
    track4 = 0.25;
    audio_sound_gain(music_part1,track1,180);
    audio_sound_gain(music_part2,track2,180);
    audio_sound_gain(music_part3,track3,180);
    audio_sound_gain(music_part4,track4,180);
}

if (obj_fire.fireLevel = 7)
{
    track1 = 0;
    track2 = 0;
    track3 = 0;
    track4 = 0;
    audio_sound_gain(music_part1,track1,180);
    audio_sound_gain(music_part2,track2,180);
    audio_sound_gain(music_part3,track3,180);
    audio_sound_gain(music_part4,track4,180);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start Music
if (!audio_is_playing(music_part1))
    &amp;&amp; (!audio_is_playing(music_part2))
    &amp;&amp; (!audio_is_playing(music_part3))
    &amp;&amp; (!audio_is_playing(music_part4))
    {
        audio_play_sound(music_part1,0,1);
        audio_play_sound(music_part2,0,1);
        audio_play_sound(music_part3,0,1);
        audio_play_sound(music_part4,0,1);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
